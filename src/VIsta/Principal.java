/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIsta;

import Controlador.Consultas;
import VIsta.Materias;
import VIsta.Login;
import VIsta.BarraInmovil;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

/**
 *
 * @author Alma Cuevas
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Login lo = new Login();
    BarraInmovil barraInmovil = new BarraInmovil();
    Materias materias = new Materias();
    Consultas consultas = new Consultas();

    //Variables de la conexion de SQLite
    Controlador.Consultas_SQLite CSQL = new Controlador.Consultas_SQLite();
    Modelo.Usuario_Local UL, UL2 = null;

    public Principal() {
        inicio();
        elementodDeInicio();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        log = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/logoP.png"))); // NOI18N
        log.setText("jLabel1");

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/fondoPrin.jpg"))); // NOI18N
        fondo.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1279, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(log))
            .addComponent(fondo)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public void elementodDeInicio() {
        //paneles necesarios se cargan al inicio 
        this.getContentPane().add(barraInmovil); // barra lateral
        //sus eventos 
        //evento del boton salir de barra lateal
        barraInmovil.salir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fondo.setVisible(true);
                log.setVisible(true);
                lo.setVisible(true);
                barraInmovil.setVisible(false);
                materias.setVisible(false);
            }
        });

        barraInmovil.ListaMaterias.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                materias.setVisible(true);
                materias.setLocation(304, 0);
                materias.setSize(1100, 800);
            }
        });

        this.getContentPane().add(lo); ///panel login
        //evento de click de login
        lo.OK.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                validar();
            }
        });
        //evento para cuando tiene el foco y preciona enter
        lo.OK.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {

                if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                    validar();
                }

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
        //Eventos del boton de agregar un nuevo usuario
        //1   
        lo.btnAgregarUsuario.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                RegistrarNuevoUsuario();
            }
        });
        //2
        lo.btnAgregarUsuario.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {

                if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                    RegistrarNuevoUsuario();
                }

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });

        //eventos de la lista materia
        barraInmovil.ListaMaterias.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mousePressed(MouseEvent e) {
                materias.txtMateria.setText(barraInmovil.ListaMaterias.getSelectedValue());
                materias.ListaExamenes.setListData(consultas.Examenes("1"));
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        this.getContentPane().add(materias);

    }

    public void inicio() {
        this.getContentPane().setBackground(new java.awt.Color(204, 204, 204));
        this.setExtendedState(Principal.MAXIMIZED_BOTH);
        lo.setSize(309, 554);
        lo.setLocation(980, 160);
        lo.setVisible(true);
    }

    //Metodo que consulta si el usuario de la base de datos existe o no
    public void ConsultaSQLite() {
        String Usuario = lo.txtUsuario.getText();
        String Contraseña = lo.txtContraseña.getText();

        try {
            UL = CSQL.IniciarSecion(Usuario, Contraseña);

        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //Metodo para validar el inicio de secion de forma local
    public void validar() {

        ConsultaSQLite();

        if (UL != null) {
            //Los eventos en la parte baja cambiaran si o si por los metodos de consulta a la base de datos de SQLite.
            //cargarListaMaterias();//FIX 
            //cargando las materias que tiene el alumno materias
            materias.txtNombre.setText(Modelo.Usuario.getNombre()); //agreganado nombre a la ventana de materia FIX
            //materias.txtMateria.setText(Datos.Materia.getNombre());FIX
            JOptionPane.showMessageDialog(null, "Iniciando Secion");
            fondo.setVisible(false);
            log.setVisible(false);
            lo.setVisible(false);
            barraInmovil.setSize(304, 800);
            barraInmovil.setVisible(true);
            //en dado caso de que se necesiten en un futuro los datos de UL que es el objeto de tipo usuario
            //Estara disponible en UL2 ya que UL debe de ser devuelto a null para poder continuar.
            //UL2 = UL;
            //UL = null;
        } else {
            JOptionPane.showMessageDialog(null, "Usuario o contraseña incorrectos");
        }

    }

    //Metodo para registrar un nuevo usuario en base a los datos de la bd principal
    public void RegistrarNuevoUsuario() {
        //comprueva si el usuario ya esta en la base de datos en SQLite para no registrarlo 2 veces.
        ConsultaSQLite();
        if (UL != null) {

            JOptionPane.showMessageDialog(null, "Este usuario ya esta registrado, No es necesario volverlo a registrar");

        } else {

            boolean sente = consultas.ConsultarUsuario(lo.txtUsuario.getText(), lo.txtContraseña.getText());
            if (sente == true) {
                JOptionPane.showMessageDialog(null, "El usuario existe en el registro");
                //Hacer un insert a la base de datos de SQLite
                String id = Modelo.Usuario.getIdUsuario();

                String usuario = Modelo.Usuario.getUsuario();

                String contraseña = Modelo.Usuario.getContraseña();

                try {
                    CSQL.Registrar_Nuevo_Usuario(id, usuario, contraseña);
                } catch (SQLException ex) {
                    System.out.println("______________________________PROBLEMA EN REGISTRAR NUEVO USUARIO" + ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "La contraseña es incorrecta o el usuario no existe en el Registro");
            }
            //hacer algo nuevo con esto luego:
//               cargarListaMaterias();//cargando las materias que tiene el alumno
//                materias.txtNombre.setText(Modelo.Usuario.getNombre()); //agreganado nombre a la ventana de materia
//                //materias.txtMateria.setText(Datos.Materia.getNombre());
//                fondo.setVisible(false);
//                log.setVisible(false);
//                lo.setVisible(false);
//                //barra Lateral 
//                barraInmovil.setSize(304, 800);
//                barraInmovil.setVisible(true);
        }
    }

    //Esto tiene que volver a ser reparado
    public void cargarListaMaterias() {
        barraInmovil.ListaMaterias.setListData(consultas.materias(Modelo.Usuario.getIdUsuario()));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel log;
    // End of variables declaration//GEN-END:variables
}
